//////////////////////////
=== Git in Bash
//////////////////////////
=== BashでGitを使う

(((bash)))(((tab completion, bash)))(((shell prompts, bash)))
//////////////////////////
If you're a Bash user, you can tap into some of your shell's features to make your experience with Git a lot friendlier.
Git actually ships with plugins for several shells, but it's not turned on by default.
//////////////////////////
あなたがBashのユーザであれば、シェルの機能を活用して、Gitをより扱いやすくすることができます。
Gitは実際、いくつかのシェルのプラグインを同梱した状態で配布されていますが、それらプラグインはデフォルトではオンになっていません。

//////////////////////////
First, you need to get a copy of the `contrib/completion/git-completion.bash` file out of the Git source code.
Copy it somewhere handy, like your home directory, and add this to your `.bashrc`:
//////////////////////////
まず、Gitのソースコードから `contrib/completion/git-completion.bash` ファイルのコピーを取得する必要があります。
取得したファイルをどこか適当な場所（例えばホームディレクトリ）へコピーした上で、 `.bashrc` に次の内容を追加します。

[source,console]
----
. ~/git-completion.bash
----

//////////////////////////
Once that's done, change your directory to a Git repository, and type:
//////////////////////////
設定が完了したら、カレントディレクトリをGitリポジトリに変更し、次のようにタイプしてみてください。

[source,console]
----
$ git chec<tab>
----

//////////////////////////
…and Bash will auto-complete to `git checkout`.
This works with all of Git's subcommands, command-line parameters, and remotes and ref names where appropriate.
//////////////////////////
……するとBashがオートコンプリートで `git checkout` まで入力してくれるはずです。
このオートコンプリートは、必要に応じて、Gitのサブコマンド、コマンドラインパラメータ、リモートおよび参照の名前に対して働きます。

//////////////////////////
It's also useful to customize your prompt to show information about the current directory's Git repository.
This can be as simple or complex as you want, but there are generally a few key pieces of information that most people want, like the current branch, and the status of the working directory.
To add these to your prompt, just copy the `contrib/completion/git-prompt.sh` file from Git's source repository to your home directory, add something like this to your `.bashrc`:
//////////////////////////
プロンプトをカスタマイズして、カレントディレクトリのGitリポジトリの情報を表示するのも便利です。
表示する内容は、好みに応じてシンプルにも複雑にもできます。ですが、一般的に多くの人は、現在のブランチや作業ディレクトリの状態のような重要な情報だけを必要とします。
プロンプトにこれらを追加するには、Gitのソースリポジトリから `contrib/completion/git-prompt.sh` ファイルをあなたのホームディレクトリにコピーし、次のような内容を `.bashrc` に追加します。

[source,console]
----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
----

//////////////////////////
The `\w` means print the current working directory, the `\$` prints the `$` part of the prompt, and `__git_ps1 " (%s)"` calls the function provided by `git-prompt.sh` with a formatting argument.
Now your bash prompt will look like this when you're anywhere inside a Git-controlled project:
//////////////////////////
`\w` は現在の作業ディレクトリを表示するという意味、`\$` はプロンプト末尾に `$` を表示するという意味、 `__git_ps1 " (%s)"` は `git-prompt.sh` が提供している関数を書式引数を指定して呼び出しています。
これで、Gitの制御下にあるプロジェクトの中に入ると、bashのプロンプトは次のようになるはずです。

//////////////////////////
.Customized `bash` prompt.
image::images/git-bash.png[Customized `bash` prompt.]
//////////////////////////
.カスタマイズされた `bash` プロンプト
image::images/git-bash.png[カスタマイズされた `bash` プロンプト]

//////////////////////////
Both of these scripts come with helpful documentation; take a look at the contents of `git-completion.bash` and `git-prompt.sh` for more information.
//////////////////////////
これらのスクリプトにはいずれも役に立つドキュメントが付属しています。詳細については、 `git-completion.bash` と `git-prompt.sh` の内容を見てください。

