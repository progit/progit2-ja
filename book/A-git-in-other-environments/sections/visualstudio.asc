//////////////////////////
=== Git in Visual Studio
//////////////////////////
=== Visual StudioでGitを使う

(((Visual Studio)))
//////////////////////////
Starting with Visual Studio 2013 Update 1, Visual Studio users have a Git client built directly into their IDE.
Visual Studio has had source-control integration features for quite some time, but they were oriented towards centralized, file-locking systems, and Git was not a good match for this workflow.
Visual Studio 2013's Git support has been separated from this older feature, and the result is a much better fit between Studio and Git.
//////////////////////////
Visual Studio 2013 Update 1以降では、IDEにGitクライアントが組み込まれています。
Visual Studioには、かなり昔からソース管理システムを統合した機能が備わっていました。ただ、それは集中型の、ファイルロックベースのシステムを志向したもので、Gitはそのようなワークフローには適合していませんでした。
Visual Studio 2013におけるGitのサポートは、以前の機能とは別物です。その結果、Visual StudioとGitはよりうまく適合するようになっています。

//////////////////////////
To locate the feature, open a project that's controlled by Git (or just `git init` an existing project), and select View > Team Explorer from the menu.
You'll see the "Connect" view, which looks a bit like this:
//////////////////////////
この機能を表示するには、Gitの制御下にあるプロジェクトを開き（または既存のプロジェクトで `git init` を実行し）、メニューから[表示]>[チームエクスプローラー]を選択します。
すると、だいたいこんな感じで「接続」ビューが表示されます。

//////////////////////////
.Connecting to a Git repository from Team Explorer.
image::images/vs-1.png[Connecting to a Git repository from Team Explorer.]
//////////////////////////
.チームエクスプローラからGitリポジトリへ接続する
image::images/vs-1.png[チームエクスプローラからGitリポジトリへ接続する]

//////////////////////////
Visual Studio remembers all of the projects you've opened that are Git-controlled, and they're available in the list at the bottom.
If you don't see the one you want there, click the "Add" link and type in the path to the working directory.
Double clicking on one of the local Git repositories leads you to the Home view, which looks like <<vs_home>>.
This is a hub for performing Git actions; when you're _writing_ code, you'll probably spend most of your time in the "Changes" view, but when it comes time to pull down changes made by your teammates, you'll use the "Unsynced Commits" and "Branches" views.
//////////////////////////
Visual Studioは、これまでに開いたプロジェクトのうち、Gitの制御下にあるものをすべて記憶しています。下部のリストからそれを選択できます。
開きたいプロジェクトが表示されていない場合は、「追加」リンクをクリックして作業ディレクトリへのパスを入力します。
ローカルのGitリポジトリをダブルクリックすると、<<vs_home>> のようなホームビューが表示されます。
これはGitのアクションを実行するためのハブとして働きます。コードを _書いて_ いる間は、おそらく「変更」ビューでほとんどの時間を費やすはずです。チームメイトが行った変更をプルするときは、「同期されていないコミット」ビューと「分岐」ビューを使用することになるでしょう。

[[vs_home]]
//////////////////////////
.The "Home" view for a Git repository in Visual Studio.
image::images/vs-2.png[The Home view for a Git repository in Visual Studio.]
//////////////////////////
.Visual StudioでのGitリポジトリの"ホーム"ビュー
image::images/vs-2.png[Visual StudioでのGitリポジトリの&quot;ホーム&quot;ビュー]

//////////////////////////
Visual Studio now has a powerful task-focused UI for Git.
It includes a linear history view, a diff viewer, remote commands, and many other capabilities.
For complete documentation of this feature (which doesn't fit here), go to http://msdn.microsoft.com/en-us/library/hh850437.aspx[].
//////////////////////////
Visual Studioには現在、Gitのための強力なタスク指向UIが備わっています。
これには、リニアな歴史ビュー、差分ビューア、リモートコマンドなど多くの機能が含まれています。
この機能の完全なドキュメントは（ここには書ききれないので）、 http://msdn.microsoft.com/en-us/library/hh850437.aspx[] を参照してください。
